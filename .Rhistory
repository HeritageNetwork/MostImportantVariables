las=2,                  #make the category names horizontal
par(
mar=c(1,1,1,1), #increase margins on the left
ps=8                  #font point size
#pin=c(5,7)            #plot dimensions width,height (might need to resize window manually, or use (5,6)
)#,
#mgp = c(5,1,5)
)
dev.off()
png(filename="E:/SDM/Shared/MostImportantVariables/boxplot.png", width=10, height=10, units='in', res=300)
boxplot(impRank ~ varFullName, data=importance,
xlab = "Importance Rank",
#ylab = "Environmental Variable",
boxfill="white", notch=TRUE,
horizontal = TRUE,
show.names = TRUE,      #not sure I need this
las=2,                  #make the category names horizontal
par(
mar=c(1,1,1,1), #increase margins on the left
ps=8                  #font point size
#pin=c(5,7)            #plot dimensions width,height (might need to resize window manually, or use (5,6)
)#,
#mgp = c(5,1,5)
)
dev.off()
#png(filename="E:/SDM/Shared/MostImportantVariables/boxplot.png", width=10, height=10, units='in', res=300)
boxplot(impRank ~ varFullName, data=importance,
xlab = "Importance Rank",
#ylab = "Environmental Variable",
boxfill="white", notch=TRUE,
horizontal = TRUE,
show.names = TRUE,      #not sure I need this
las=2,                  #make the category names horizontal
par(
mar=c(1,1,1,1), #increase margins on the left
ps=8                  #font point size
#pin=c(5,7)            #plot dimensions width,height (might need to resize window manually, or use (5,6)
)#,
#mgp = c(5,1,5)
)
#png(filename="E:/SDM/Shared/MostImportantVariables/boxplot.png", width=10, height=10, units='in', res=300)
boxplot(impRank ~ varFullName, data=importance,
xlab = "Importance Rank",
#ylab = "Environmental Variable",
boxfill="white", notch=TRUE,
horizontal = TRUE,
show.names = TRUE,      #not sure I need this
las=2,                  #make the category names horizontal
par(
mar=c(1,1,1,1), #increase margins on the left
ps=8 ,                 #font point size
pin=c(5,7)            #plot dimensions width,height (might need to resize window manually, or use (5,6)
)#,
#mgp = c(5,1,5)
)
png(filename="E:/SDM/Shared/MostImportantVariables/boxplot.png", width=10, height=10, units='in', res=300)
boxplot(impRank ~ varFullName, data=importance,
xlab = "Importance Rank",
#ylab = "Environmental Variable",
boxfill="white", notch=TRUE,
horizontal = TRUE,
show.names = TRUE,      #not sure I need this
las=2,                  #make the category names horizontal
par(
mar=c(1,1,1,1), #increase margins on the left
ps=8 ,                 #font point size
pin=c(5,7)            #plot dimensions width,height (might need to resize window manually, or use (5,6)
)#,
#mgp = c(5,1,5)
)
dev.off()
png(filename="E:/SDM/Shared/MostImportantVariables/boxplot.png", width=10, height=10, units='in', res=300)
boxplot(impRank ~ varFullName, data=importance,
xlab = "Importance Rank",
#ylab = "Environmental Variable",
boxfill="white", notch=TRUE,
horizontal = TRUE,
show.names = TRUE,      #not sure I need this
las=2,                  #make the category names horizontal
par(
mar=c(1,1,1,1), #increase margins on the left
ps=8 ,                 #font point size
pin=c(5,8)            #plot dimensions width,height (might need to resize window manually, or use (5,6)
)#,
#mgp = c(5,1,5)
)
dev.off()
png(filename="E:/SDM/Shared/MostImportantVariables/boxplot.png", width=8, height=10, units='in', res=300)
boxplot(impRank ~ varFullName, data=importance,
xlab = "Importance Rank",
#ylab = "Environmental Variable",
boxfill="white", notch=TRUE,
horizontal = TRUE,
show.names = TRUE,      #not sure I need this
las=2,                  #make the category names horizontal
par(
mar=c(1,1,1,1), #increase margins on the left
ps=8 ,                 #font point size
pin=c(5,9)            #plot dimensions width,height (might need to resize window manually, or use (5,6)
)#,
#mgp = c(5,1,5)
)
dev.off()
png(filename="E:/SDM/Shared/MostImportantVariables/boxplot.png", width=10, height=10, units='in', res=600)
boxplot(impRank ~ varFullName, data=importance,
xlab = "Importance Rank",
#ylab = "Environmental Variable",
boxfill="white", notch=TRUE,
horizontal = TRUE,
show.names = TRUE,      #not sure I need this
las=2,                  #make the category names horizontal
par(
mar=c(1,1,1,1), #increase margins on the left
ps=8 ,                 #font point size
pin=c(5,9)            #plot dimensions width,height (might need to resize window manually, or use (5,6)
)#,
#mgp = c(5,1,5)
)
dev.off()
source('E:/SDM/Shared/MostImportantVariables/ExtractImportanceOnly.r')
library(RSQLite)
library(randomForest)
# First, change to the directory
setwd("E:/SDM/MA_Butterfly/outputs")
#get a list of what's in the directory
d <- dir(pattern = "Rdata")
#i <- 1
#loop through everything in the dir
for (i in 1:length(d)){
#for (i in 1:46){
fileName <- dir(pattern = "Rdata")[[i]]
# Bring the two files into R
load(fileName)
impRank <- rank(-EnvVars$impVal)   #reverse order by ranking the negative
EnvVars <- cbind(EnvVars, impRank)
#get number of varibles used in each forest
used <- varUsed(rf.full)
names(used) <- names(EnvVars)
f.importance <- data.frame(
"Species" = ElementNames$SciName,
#"SppCode" = abbr,
"varCode" = rownames(EnvVars),
"varFullName"=EnvVars$fullName,
"meanDecreaseAcc" = EnvVars$impVal,
"impRank" = EnvVars$impRank,
"timesUsed" = used,
"dtmDate" = format(Sys.time(), "%Y %m %d"),
"dtmTime" = format(Sys.time(), "%X")
)
#  open up a "channel" to the Access DB
databasename <- "E:/SDM/Shared/MostImportantVariables/MostImportantVar.sqlite"
db <- dbConnect(SQLite(), dbname = databasename)
#write importance values
dbWriteTable(db, "tblImportance", f.importance, append=TRUE)
# disconnect the SQL database
dbDisconnect(db) #close connection
#remind me what I just ran -- doesn't work, need print?
ElementNames[[1]]
#clear the decks for the next run
rm(list=ls(all=TRUE))
#end the loop
}
library(RSQLite)
#  open up a "channel" to the Access DB
databasename <- "E:/SDM/Shared/MostImportantVariables/MostImportantVar.sqlite"
db <- dbConnect(SQLite(), dbname = databasename)
#write importance values
###importance <- sqlQuery(channel = Cn.MDB.out, query = "SELECT * FROM tblImportance")
SQLquery_imp <- paste("SELECT * FROM tblImportance")
importance  <- dbGetQuery(db, statement=SQLquery_imp )
dbDisconnect(db) #close connection
##means <- sqlQuery(channel = Cn.MDB.out, query = "select * from qryAverageImportance")
means <- aggregate(importance$impRank ,by=list(varFullName=importance$varFullName),FUN=mean)
means <- means[order(-means$x),]
#the order of the boxes in the boxplot is based on the order of the factors.
#change the order based on the ascending order of the means, from the means table
importance$varFullName <- factor(importance$varFullName,levels=means$varFullName)
#extract the number of models that used each variable
sampSize <- table(importance$varCode)
png(filename="E:/SDM/Shared/MostImportantVariables/boxplot.png", width=10, height=10, units='in', res=600)
boxplot(impRank ~ varFullName, data=importance,
xlab = "Importance Rank",
#ylab = "Environmental Variable",
boxfill="white", notch=TRUE,
horizontal = TRUE,
show.names = TRUE,      #not sure I need this
las=2,                  #make the category names horizontal
par(
mar=c(1,1,1,1), #increase margins on the left
ps=8 ,                 #font point size
pin=c(5,9)            #plot dimensions width,height (might need to resize window manually, or use (5,6)
)#,
#mgp = c(5,1,5)
)
dev.off()
png(filename="E:/SDM/Shared/MostImportantVariables/boxplot.png", width=10, height=10, units='in', res=600)
boxplot(impRank ~ varFullName, data=importance,
xlab = "Importance Rank",
#ylab = "Environmental Variable",
boxfill="white", notch=FALSE,
horizontal = TRUE,
show.names = TRUE,      #not sure I need this
las=2,                  #make the category names horizontal
par(
mar=c(1,1,1,1), #increase margins on the left
ps=8 ,                 #font point size
pin=c(5,9)            #plot dimensions width,height (might need to resize window manually, or use (5,6)
)#,
#mgp = c(5,1,5)
)
dev.off()
i
library(RSQLite)
library(randomForest)
# First, change to the directory
setwd("E:/SDM/Aquatic2/outputs")
#get a list of what's in the directory
d <- dir(pattern = "Rdata", include.dirs=TRUE)
#get a list of what's in the directory
d <- dir(pattern = "Rdata", include.dirs=TRUE, recursive=FALSE)
#get a list of what's in the directory
d <- dir(pattern = "Rdata", recursive=FALSE)
#get a list of what's in the directory
d <- dir(path=".", pattern="Rdata", recursive=FALSE)
#get a list of what's in the directory
d <- dir(path=".", pattern="Rdata", all.files=TRUE, recursive=FALSE)
#get a list of what's in the directory
d <- dir(path=".", pattern="Rdata", all.files=TRUE, recursive=FALSE, include.dirs=TRUE)
#get a list of what's in the directory
d <- dir(path=".", pattern="Rdata", all.files=TRUE, recursive=TRUE, include.dirs=TRUE)
#get a list of what's in the directory
d <- dir(path=".", pattern="Rdata", recursive=TRUE, include.dirs=TRUE)
#get a list of what's in the directory
d <- dir(pattern="Rdata", recursive=TRUE, include.dirs=TRUE)
#i <- 1
#loop through everything in the dir
for (i in 1:length(d)){
#for (i in 1:46){
fileName <- dir(pattern="Rdata", recursive=TRUE, include.dirs=TRUE)[[i]]
# Bring the two files into R
load(fileName)
impRank <- rank(-EnvVars$impVal)   #reverse order by ranking the negative
EnvVars <- cbind(EnvVars, impRank)
#get number of varibles used in each forest
used <- varUsed(rf.full)
names(used) <- names(EnvVars)
f.importance <- data.frame(
"Species" = ElementNames$SciName,
#"SppCode" = abbr,
"varCode" = rownames(EnvVars),
"varFullName"=EnvVars$fullName,
"meanDecreaseAcc" = EnvVars$impVal,
"impRank" = EnvVars$impRank,
"timesUsed" = used,
"dtmDate" = format(Sys.time(), "%Y %m %d"),
"dtmTime" = format(Sys.time(), "%X")
)
#  open up a "channel" to the Access DB
databasename <- "E:/SDM/Shared/MostImportantVariables/MostImportantVar_Aquuatic.sqlite"
db <- dbConnect(SQLite(), dbname = databasename)
#write importance values
dbWriteTable(db, "tblImportance", f.importance, append=TRUE)
# disconnect the SQL database
dbDisconnect(db) #close connection
#remind me what I just ran -- doesn't work, need print?
ElementNames[[1]]
#clear the decks for the next run
rm(list=ls(all=TRUE))
#end the loop
}
i <- 1
#for (i in 1:46){
fileName <- dir(pattern="Rdata", recursive=TRUE, include.dirs=TRUE)[[i]]
# Bring the two files into R
load(fileName)
impRank <- rank(-EnvVars$impVal)   #reverse order by ranking the negative
EnvVars <- cbind(EnvVars, impRank)
#get number of varibles used in each forest
used <- varUsed(rf.full)
names(used) <- names(EnvVars)
f.importance <- data.frame(
"Species" = ElementNames$SciName,
#"SppCode" = abbr,
"varCode" = rownames(EnvVars),
"varFullName"=EnvVars$fullName,
"meanDecreaseAcc" = EnvVars$impVal,
"impRank" = EnvVars$impRank,
"timesUsed" = used,
"dtmDate" = format(Sys.time(), "%Y %m %d"),
"dtmTime" = format(Sys.time(), "%X")
)
#  open up a "channel" to the Access DB
databasename <- "E:/SDM/Shared/MostImportantVariables/MostImportantVar_Aquuatic.sqlite"
db <- dbConnect(SQLite(), dbname = databasename)
#write importance values
dbWriteTable(db, "tblImportance", f.importance, append=TRUE)
View(df.in)
# disconnect the SQL database
dbDisconnect(db) #close connection
#remind me what I just ran -- doesn't work, need print?
ElementNames[[1]]
#clear the decks for the next run
rm(list=ls(all=TRUE))
#end the loop
}
# First, change to the directory
setwd("E:/SDM/Aquatic2/outputs")
#get a list of what's in the directory
d <- dir(pattern="Rdata", recursive=TRUE, include.dirs=TRUE)
#i <- 1
#loop through everything in the dir
for (i in 1:length(d)){
#for (i in 1:46){
fileName <- dir(pattern="Rdata", recursive=TRUE, include.dirs=TRUE)[[i]]
# Bring the two files into R
load(fileName)
impRank <- rank(-EnvVars$impVal)   #reverse order by ranking the negative
EnvVars <- cbind(EnvVars, impRank)
#get number of varibles used in each forest
used <- varUsed(rf.full)
names(used) <- names(EnvVars)
f.importance <- data.frame(
"Species" = ElementNames$SciName,
#"SppCode" = abbr,
"varCode" = rownames(EnvVars),
"varFullName"=EnvVars$fullName,
"meanDecreaseAcc" = EnvVars$impVal,
"impRank" = EnvVars$impRank,
"timesUsed" = used,
"dtmDate" = format(Sys.time(), "%Y %m %d"),
"dtmTime" = format(Sys.time(), "%X")
)
#  open up a "channel" to the Access DB
databasename <- "E:/SDM/Shared/MostImportantVariables/MostImportantVar_Aquuatic.sqlite"
db <- dbConnect(SQLite(), dbname = databasename)
#write importance values
dbWriteTable(db, "tblImportance", f.importance, append=TRUE)
# disconnect the SQL database
dbDisconnect(db) #close connection
#remind me what I just ran -- doesn't work, need print?
ElementNames[[1]]
#clear the decks for the next run
rm(list=ls(all=TRUE))
#end the loop
}
# First, change to the directory
setwd("E:/SDM/Aquatic2/outputs")
#get a list of what's in the directory
d <- dir(pattern="Rdata", recursive=TRUE, include.dirs=TRUE)
#i <- 1
#loop through everything in the dir
for (i in 1:length(d)){
#for (i in 1:46){
fileName <- dir(pattern="Rdata", recursive=TRUE, include.dirs=TRUE)[[i]]
# Bring the two files into R
load(fileName)
impRank <- rank(-EnvVars$impVal)   #reverse order by ranking the negative
EnvVars <- cbind(EnvVars, impRank)
#get number of varibles used in each forest
used <- varUsed(rf.full)
names(used) <- names(EnvVars)
f.importance <- data.frame(
"Species" = ElementNames$SciName,
#"SppCode" = abbr,
"varCode" = rownames(EnvVars),
"varFullName"=EnvVars$fullName,
"meanDecreaseAcc" = EnvVars$impVal,
"impRank" = EnvVars$impRank,
"timesUsed" = used,
"dtmDate" = format(Sys.time(), "%Y %m %d"),
"dtmTime" = format(Sys.time(), "%X")
)
#  open up a "channel" to the Access DB
databasename <- "E:/SDM/Shared/MostImportantVariables/MostImportantVar_Aquuatic.sqlite"
db <- dbConnect(SQLite(), dbname = databasename)
#write importance values
dbWriteTable(db, "tblImportance", f.importance, append=TRUE)
# disconnect the SQL database
dbDisconnect(db) #close connection
#remind me what I just ran -- doesn't work, need print?
ElementNames[[1]]
#clear the decks for the next run
#rm(list=ls(all=TRUE))
#end the loop
}
setwd("E:/SDM/Aquatic2/outputs")
#get a list of what's in the directory
d <- dir(pattern="Rdata", recursive=TRUE, include.dirs=TRUE)
#i <- 1
#loop through everything in the dir
for (i in 1:length(d)){
#for (i in 1:46){
fileName <- dir(pattern="Rdata", recursive=TRUE, include.dirs=TRUE)[[i]]
# Bring the two files into R
load(fileName)
impRank <- rank(-EnvVars$impVal)   #reverse order by ranking the negative
EnvVars <- cbind(EnvVars, impRank)
#get number of varibles used in each forest
used <- varUsed(rf.full)
names(used) <- names(EnvVars)
f.importance <- data.frame(
"Species" = ElementNames$SciName,
#"SppCode" = abbr,
"varCode" = rownames(EnvVars),
"varFullName"=EnvVars$fullName,
"meanDecreaseAcc" = EnvVars$impVal,
"impRank" = EnvVars$impRank,
"timesUsed" = used,
"dtmDate" = format(Sys.time(), "%Y %m %d"),
"dtmTime" = format(Sys.time(), "%X")
)
#  open up a "channel" to the Access DB
databasename <- "E:/SDM/Shared/MostImportantVariables/MostImportantVar_Aquuatic.sqlite"
db <- dbConnect(SQLite(), dbname = databasename)
#write importance values
dbWriteTable(db, "tblImportance", f.importance, append=TRUE)
# disconnect the SQL database
dbDisconnect(db) #close connection
#remind me what I just ran -- doesn't work, need print?
ElementNames[[1]]
#clear the decks for the next run
#rm(list=ls(all=TRUE))
#end the loop
}
setwd("E:/SDM/Aquatic2/outputs")
#get a list of what's in the directory
d <- dir(pattern="Rdata", recursive=TRUE, include.dirs=TRUE)
#i <- 1
#loop through everything in the dir
for (i in 1:length(d)){
#for (i in 1:46){
fileName <- dir(pattern="Rdata", recursive=TRUE, include.dirs=TRUE)[[i]]
# Bring the two files into R
load(fileName)
impRank <- rank(-EnvVars$impVal)   #reverse order by ranking the negative
EnvVars <- cbind(EnvVars, impRank)
#get number of varibles used in each forest
used <- varUsed(rf.full)
names(used) <- names(EnvVars)
f.importance <- data.frame(
"Species" = ElementNames$SciName,
#"SppCode" = abbr,
"varCode" = rownames(EnvVars),
"varFullName"=EnvVars$fullName,
"meanDecreaseAcc" = EnvVars$impVal,
"impRank" = EnvVars$impRank,
"timesUsed" = used,
"dtmDate" = format(Sys.time(), "%Y %m %d"),
"dtmTime" = format(Sys.time(), "%X")
)
#  open up a "channel" to the Access DB
databasename <- "E:/SDM/Shared/MostImportantVariables/MostImportantVar_Aquuatic.sqlite"
db <- dbConnect(SQLite(), dbname = databasename)
#write importance values
dbWriteTable(db, "tblImportance", f.importance, append=TRUE)
# disconnect the SQL database
dbDisconnect(db) #close connection
#remind me what I just ran -- doesn't work, need print?
ElementNames[[1]]
#clear the decks for the next run
#rm(list=ls(all=TRUE))
#end the loop
}
library(RSQLite)
#  open up a "channel" to the Access DB
databasename <- "E:/SDM/Shared/MostImportantVariables/MostImportantVar_Aquuatic.sqlite"
db <- dbConnect(SQLite(), dbname = databasename)
#write importance values
###importance <- sqlQuery(channel = Cn.MDB.out, query = "SELECT * FROM tblImportance")
SQLquery_imp <- paste("SELECT * FROM tblImportance")
importance  <- dbGetQuery(db, statement=SQLquery_imp )
dbDisconnect(db) #close connection
##means <- sqlQuery(channel = Cn.MDB.out, query = "select * from qryAverageImportance")
means <- aggregate(importance$impRank ,by=list(varFullName=importance$varFullName),FUN=mean)
means <- means[order(-means$x),]
#the order of the boxes in the boxplot is based on the order of the factors.
#change the order based on the ascending order of the means, from the means table
importance$varFullName <- factor(importance$varFullName,levels=means$varFullName)
#extract the number of models that used each variable
sampSize <- table(importance$varCode)
png(filename="E:/SDM/Shared/MostImportantVariables/boxplot.png", width=10, height=10, units='in', res=600)
boxplot(impRank ~ varFullName, data=importance,
xlab = "Importance Rank",
#ylab = "Environmental Variable",
boxfill="white", notch=FALSE,
horizontal = TRUE,
show.names = TRUE,      #not sure I need this
las=2,                  #make the category names horizontal
par(
mar=c(1,1,1,1), #increase margins on the left
ps=8 ,                 #font point size
pin=c(5,9)            #plot dimensions width,height (might need to resize window manually, or use (5,6)
)#,
#mgp = c(5,1,5)
)
dev.off()
png(filename="E:/SDM/Shared/MostImportantVariables/boxplot_aquatic.png", width=10, height=10, units='in', res=600)
boxplot(impRank ~ varFullName, data=importance,
xlab = "Importance Rank",
#ylab = "Environmental Variable",
boxfill="white", notch=FALSE,
horizontal = TRUE,
show.names = TRUE,      #not sure I need this
las=2,                  #make the category names horizontal
par(
mar=c(1,1,1,1), #increase margins on the left
ps=6,                 #font point size
pin=c(5,9)            #plot dimensions width,height (might need to resize window manually, or use (5,6)
)#,
#mgp = c(5,1,5)
)
dev.off()
